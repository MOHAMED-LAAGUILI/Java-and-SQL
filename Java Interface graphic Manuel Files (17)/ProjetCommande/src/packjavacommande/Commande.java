
package packjavacommande;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.File;
import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.StringTokenizer;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class Commande extends javax.swing.JFrame {
    String numcmd, dtcmd;
    float totcmd;
    File f,f1;
    RandomAccessFile raf,rafn;
    StringTokenizer st;
    public Commande() {
        initComponents();
        tcmd.addMouseListener(new MouseAdapter() {
            public void mousePressed(MouseEvent ev){
                  tableau_click(ev);
            }
        });
    }
     protected void tableau_click(MouseEvent ev){
        afficherligne();
    }
     void nouveau(){
        cmbnc.setSelectedItem("");
        txtdc.setText("");
        txttc.setText("");
        cmbnc.requestFocus();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txttc = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtdc = new javax.swing.JTextField();
        cmbnc = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tcmd = new javax.swing.JTable(){
            public java.awt.Component prepareRenderer(javax.swing.table.TableCellRenderer renderer,
                int row, int column)
            {
                java.awt.Component c = super.prepareRenderer(renderer, row, column);
                java.awt.Color color1 = java.awt.Color.GRAY;
                java.awt.Color color2 = java.awt.Color.PINK;
                java.awt.Color colorf1 = java.awt.Color.white;
                java.awt.Color colorf2 = java.awt.Color.black;
                if(!c.getBackground().equals(getSelectionBackground())) {
                    java.awt.Color coleur = (row % 2 == 0 ? color1 : color2);
                    java.awt.Color coleurf = (row % 2 == 0 ? colorf1 : colorf2);
                    c.setBackground(coleur);
                    c.setForeground(coleurf);
                    coleur = null;
                    coleurf =null;
                }
                return c;
            }
        };
        jToolBar1 = new javax.swing.JToolBar();
        btn = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JToolBar.Separator();
        bte = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        btr = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        btl = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        btm = new javax.swing.JButton();
        jSeparator5 = new javax.swing.JToolBar.Separator();
        bts = new javax.swing.JButton();
        jSeparator6 = new javax.swing.JToolBar.Separator();
        btf = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Gestion des commandes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        txttc.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txttcKeyPressed(evt);
            }
        });

        jLabel7.setText("Date de la commande                       :");

        jLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        jLabel1.setText("Les commandes des clients");

        jLabel2.setText("Numéro de la commande                  :");
        jLabel2.setToolTipText("");

        jLabel4.setText("Total de la commande                      :");

        cmbnc.setEditable(true);
        cmbnc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbncItemStateChanged(evt);
            }
        });
        cmbnc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbncMouseClicked(evt);
            }
        });
        cmbnc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbncActionPerformed(evt);
            }
        });

        tcmd.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        tcmd.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Numéro de la commande", "Total de la commande", "Date de la commande  "
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tcmd);

        jToolBar1.setRollover(true);

        btn.setBackground(new java.awt.Color(248, 148, 6));
        btn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/nouveau1.png"))); // NOI18N
        btn.setToolTipText("Nouveau");
        btn.setBorderPainted(false);
        btn.setFocusable(false);
        btn.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btn.setMaximumSize(new java.awt.Dimension(38, 34));
        btn.setMinimumSize(new java.awt.Dimension(38, 34));
        btn.setName(""); // NOI18N
        btn.setPreferredSize(new java.awt.Dimension(38, 34));
        btn.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/nouveau2.png"))); // NOI18N
        btn.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActionPerformed(evt);
            }
        });
        jToolBar1.add(btn);
        jToolBar1.add(jSeparator1);

        bte.setBackground(new java.awt.Color(248, 148, 6));
        bte.setIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/enregistrer1.png"))); // NOI18N
        bte.setToolTipText("Enregistrer");
        bte.setBorderPainted(false);
        bte.setFocusable(false);
        bte.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bte.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/enregistrer1.png"))); // NOI18N
        bte.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/enregistrer2.png"))); // NOI18N
        bte.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bteActionPerformed(evt);
            }
        });
        jToolBar1.add(bte);
        jToolBar1.add(jSeparator2);

        btr.setBackground(new java.awt.Color(248, 148, 6));
        btr.setIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/recherche1.png"))); // NOI18N
        btr.setToolTipText("Rechercher");
        btr.setFocusable(false);
        btr.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btr.setMaximumSize(new java.awt.Dimension(38, 34));
        btr.setMinimumSize(new java.awt.Dimension(38, 34));
        btr.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/recherche1.png"))); // NOI18N
        btr.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/recherche2.png"))); // NOI18N
        btr.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btrActionPerformed(evt);
            }
        });
        jToolBar1.add(btr);
        jToolBar1.add(jSeparator3);

        btl.setBackground(new java.awt.Color(248, 148, 6));
        btl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/liste1.png"))); // NOI18N
        btl.setToolTipText("Lister");
        btl.setFocusable(false);
        btl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btl.setMaximumSize(new java.awt.Dimension(38, 34));
        btl.setMinimumSize(new java.awt.Dimension(38, 34));
        btl.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/lster2.png"))); // NOI18N
        btl.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/lister3.png"))); // NOI18N
        btl.setVerifyInputWhenFocusTarget(false);
        btl.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btlActionPerformed(evt);
            }
        });
        jToolBar1.add(btl);
        jToolBar1.add(jSeparator4);

        btm.setBackground(new java.awt.Color(248, 148, 6));
        btm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/modifier1.png"))); // NOI18N
        btm.setToolTipText("Modifier");
        btm.setBorderPainted(false);
        btm.setFocusable(false);
        btm.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btm.setMaximumSize(new java.awt.Dimension(38, 34));
        btm.setMinimumSize(new java.awt.Dimension(38, 34));
        btm.setPreferredSize(new java.awt.Dimension(38, 34));
        btm.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/modifier1.png"))); // NOI18N
        btm.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/modifier2.png"))); // NOI18N
        btm.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btmActionPerformed(evt);
            }
        });
        jToolBar1.add(btm);
        jToolBar1.add(jSeparator5);

        bts.setBackground(new java.awt.Color(248, 148, 6));
        bts.setIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/supprimer.png"))); // NOI18N
        bts.setToolTipText("Supprimer");
        bts.setBorderPainted(false);
        bts.setFocusable(false);
        bts.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        bts.setMaximumSize(new java.awt.Dimension(38, 34));
        bts.setMinimumSize(new java.awt.Dimension(38, 34));
        bts.setPreferredSize(new java.awt.Dimension(38, 34));
        bts.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/supprimer.png"))); // NOI18N
        bts.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/supprimer2.png"))); // NOI18N
        bts.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        bts.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btsActionPerformed(evt);
            }
        });
        jToolBar1.add(bts);
        jToolBar1.add(jSeparator6);

        btf.setBackground(new java.awt.Color(248, 148, 6));
        btf.setIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/fermer1.png"))); // NOI18N
        btf.setToolTipText("Fermer");
        btf.setBorderPainted(false);
        btf.setFocusable(false);
        btf.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btf.setMaximumSize(new java.awt.Dimension(38, 34));
        btf.setMinimumSize(new java.awt.Dimension(38, 34));
        btf.setPreferredSize(new java.awt.Dimension(38, 34));
        btf.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/fermer1.png"))); // NOI18N
        btf.setSelectedIcon(new javax.swing.ImageIcon(getClass().getResource("/packjavacommande/fermer2.png"))); // NOI18N
        btf.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btfActionPerformed(evt);
            }
        });
        jToolBar1.add(btf);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(33, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 690, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txttc)
                                    .addComponent(txtdc)
                                    .addComponent(cmbnc, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(334, 334, 334)
                        .addComponent(jLabel1)))
                .addContainerGap(639, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 1294, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cmbnc, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtdc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txttc, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(302, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
private void enregistrer()throws IOException {
        f=new File("D:\\MonDossier");
        if(!f.exists())
            f.mkdir();
        f1=new File(f,"fichierCommande.don");
	String line;
        line= cmbnc.getSelectedItem().toString()+'\t'+txtdc.getText()+'\t'+txttc.getText()+'\n';
        if( line.compareTo("")!=0){
            raf = new RandomAccessFile(f1, "rw");
            raf.seek(raf.length());
            raf.writeBytes(line);
            raf.close();
        }
    }
     private boolean recherchercle()throws IOException{
        String str,s;
        boolean bl=false;
        f=new File("D:\\MonDossier");
        if(!f.exists())
            f.mkdir();
        f1=new File(f,"fichierCommande.don");
        int i=0;
        try{
            raf = new RandomAccessFile(f1, "rw");
            while((str=raf.readLine())!=null){ 
                i++;
            }
        }catch(IOException e){
        }finally{
            raf.close();
        }
        if(i>0){
            try{
                raf = new RandomAccessFile("D:\\MonDossier\\fichierCommande.don", "rw");
                while((str=raf.readLine())!=null){
                    if(str.trim().compareTo("")!=0){
                        st=new StringTokenizer(str,"\t");
                        s=String.valueOf(st.nextToken());
                        if(s.trim().compareTo(cmbnc.getSelectedItem().toString())==0)
                            bl=true;
                        break;
                    }
                }
            }catch(IOException |NullPointerException |java.util.NoSuchElementException e){
            }finally{
                raf.close();
            }
        }
        return bl;
    }
    private void rechercher()throws IOException{
        String str,s;
        try{
            raf = new RandomAccessFile("D:\\MonDossier\\fichierCommande.don", "rw");
            while((str=raf.readLine())!=null){
                if(str.trim().compareTo("")!=0){
                    st=new StringTokenizer(str,"\t");
                    s=String.valueOf(st.nextToken());
                    if(s.trim().compareTo(cmbnc.getSelectedItem().toString())==0){
                        txtdc.setText(st.nextToken());
                        txttc.setText(st.nextToken());
                        break;
                    }
                }    
            }
        }catch(IOException |NullPointerException |java.util.NoSuchElementException e){
        }finally{
            raf.close();
        }     
    }

    private void lister()throws IOException{
        String str="";
        ((DefaultTableModel) tcmd.getModel()).setRowCount(0);
        try{
            raf = new RandomAccessFile("D:\\MonDossier\\fichierCommande.don", "rw");
           
            while((str=raf.readLine())!=null){
                if(str.trim().compareTo("")!=0){
                    st=new StringTokenizer(str.trim(),"\t");
                    ((DefaultTableModel) tcmd.getModel()).addRow(new Object[]{String.valueOf(st.nextToken()),String.valueOf(st.nextToken()),String.valueOf(st.nextToken())});
                }
            }
        }catch(IOException |NullPointerException |java.util.NoSuchElementException e){
        }finally{
            raf.close();
        } 
    }
    private void modifierLigne(String chemin,String idmodif){
      String fichtemp="D:\\MonDossier\\fichierTemp.don";
      File ancFich=new File(chemin);
      File nouvFich=new File(fichtemp);
      String id="";
      String lignecourante;
      String line= cmbnc.getSelectedItem().toString()+'\t'+txtdc.getText()+
              '\t'+txttc.getText()+'\n';
      try{
          rafn=new java.io.RandomAccessFile(fichtemp,"rw");
          raf=new java.io.RandomAccessFile(chemin,"rw");
          while((lignecourante=raf.readLine())!=null){
              if(lignecourante.trim().compareTo("")!=0){
                    st=new StringTokenizer(lignecourante,"\t");
                    id=String.valueOf(st.nextToken());
                    if(id.trim().compareTo(idmodif)!=0){
                        rafn.writeBytes(lignecourante+"\n");
                    }
                    else 
                        rafn.writeBytes(line);
              }
          }
          raf.close();
          rafn.close();
          ancFich.delete();
          File fich=new File(chemin);
          nouvFich.renameTo(fich);
      }catch(IOException |NullPointerException e){
        }
  }
  private void supprimerLigne(String chemin,String idsuppr){
      String fichtemp="D:\\MonDossier\\fichierTemp.don";
      File ancFich=new File(chemin);
      File nouvFich=new File(fichtemp);
      String id="";
      String lignecourante;
      try{
          rafn=new java.io.RandomAccessFile(fichtemp,"rw");
          raf=new java.io.RandomAccessFile(chemin,"rw");
          while((lignecourante=raf.readLine())!=null){
              if(lignecourante.trim().compareTo("")!=0){
                    st=new StringTokenizer(lignecourante,"\t");
                    id=String.valueOf(st.nextToken());
                    if(id.trim().compareTo(idsuppr)!=0){
                        rafn.writeBytes(lignecourante+"\n");
                    }
              }
          }
          raf.close();
          rafn.close();
          ancFich.delete();
          File fich=new File(chemin);
          nouvFich.renameTo(fich);
      }catch(IOException |NullPointerException e){
      }
  }
    private void remplir()throws IOException{
        String str="";
        javax.swing.DefaultComboBoxModel cmbmodel = new javax.swing.DefaultComboBoxModel();
        try{
            raf = new RandomAccessFile("D:\\MonDossier\\fichierCommande.don", "rw");
            while((str=raf.readLine())!=null){
                if(str.trim().compareTo("")!=0){
                    st=new StringTokenizer(str.trim(),"\t");
                    cmbmodel.addElement(st.nextToken());
                }
            } 
        }catch(IOException |NullPointerException |java.util.NoSuchElementException e){
        }finally{
            raf.close();
        }
        cmbnc.setModel(cmbmodel);
    }
    private void afficherligne(){
        cmbnc.setSelectedItem(tcmd.getValueAt(tcmd.getSelectedRow(), 0).toString());
        txtdc.setText(tcmd.getValueAt(tcmd.getSelectedRow(), 1).toString());
        txttc.setText(tcmd.getValueAt(tcmd.getSelectedRow(), 2).toString());
    }
    private void txttcKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txttcKeyPressed
       
    }//GEN-LAST:event_txttcKeyPressed

    private void cmbncItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbncItemStateChanged
        try{
            rechercher();
        }catch(IOException |NullPointerException e){}
    }//GEN-LAST:event_cmbncItemStateChanged

    private void cmbncMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbncMouseClicked
        try{
            remplir();
        }catch(IOException |NullPointerException e){}
    }//GEN-LAST:event_cmbncMouseClicked

    private void cmbncActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbncActionPerformed

    }//GEN-LAST:event_cmbncActionPerformed

    private void btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActionPerformed
        nouveau();
    }//GEN-LAST:event_btnActionPerformed

    private void bteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bteActionPerformed
        try{
            if(!recherchercle()){
                enregistrer();
                nouveau();
                remplir();
                JOptionPane.showMessageDialog(this, "La commande est bien enregistrée");
            }
            else
            {
                JOptionPane.showMessageDialog(this,"La commande existe déja");
                cmbnc.setSelectedItem("");
                cmbnc.requestFocus();
            }
        }catch(IOException |NullPointerException e){}

    }//GEN-LAST:event_bteActionPerformed

    private void btlActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btlActionPerformed
        try{
            lister();
        }catch(IOException |NullPointerException e){}
    }//GEN-LAST:event_btlActionPerformed

    private void btmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btmActionPerformed
        int rep=JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de modifier cet enregistrement?", "Modification", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (rep==JOptionPane.YES_OPTION){
            modifierLigne("D:\\MonDossier\\fichierCommande.don",cmbnc.getSelectedItem().toString());
            JOptionPane.showMessageDialog(this, "l'enregistrement est bien modifié");
            try{
             remplir();
            }catch(IOException |NullPointerException e){}
        }
    }//GEN-LAST:event_btmActionPerformed

    private void btsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btsActionPerformed
        int rep=JOptionPane.showConfirmDialog(this, "Êtes-vous sûr de supprimer cet enregistrement?", "Suppression", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE);
        if (rep==JOptionPane.YES_OPTION){
            supprimerLigne("D:\\MonDossier\\fichierCommande.don",cmbnc.getSelectedItem().toString());
            JOptionPane.showMessageDialog(this, "l'enregistrement est bien supprimé");
            try{
                remplir();
            }catch(IOException |NullPointerException e){}
        }
    }//GEN-LAST:event_btsActionPerformed

    private void btfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btfActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btfActionPerformed

    private void btrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btrActionPerformed
        try{
            rechercher();
        }catch(IOException |NullPointerException e){}
    }//GEN-LAST:event_btrActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        try{
                remplir();
            }catch(IOException |NullPointerException e){}
    }//GEN-LAST:event_formWindowOpened

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Commande.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Commande().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bte;
    private javax.swing.JButton btf;
    private javax.swing.JButton btl;
    private javax.swing.JButton btm;
    private javax.swing.JButton btn;
    private javax.swing.JButton btr;
    private javax.swing.JButton bts;
    private javax.swing.JComboBox<String> cmbnc;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToolBar.Separator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JToolBar.Separator jSeparator5;
    private javax.swing.JToolBar.Separator jSeparator6;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JTable tcmd;
    private javax.swing.JTextField txtdc;
    private javax.swing.JTextField txttc;
    // End of variables declaration//GEN-END:variables
}
